# reports/generate_lungct_report.py

from fpdf import FPDF
from datetime import datetime
import uuid

def generate_lungct_report(
    detections: list,
    summary: str,
    purpose: str,
    observations: str,
    info_note: str,
    user: str = "Anonymous User",
    output_path: str = "LungCT_Report.pdf"
) -> str:
    """
    Generate a PDF report for Lung CT AI detection results.

    Args:
        detections (list): List of dicts with nodule info:
            [{ "nodule_id": int, "confidence": str, "location": str, "size": str, "priority": str }]
        summary (str): Overall findings summary
        purpose (str): Purpose statement
        observations (str): Clinical-style notes
        info_note (str): Extra info/disclaimer
        user (str): Name of user/patient (default "Anonymous User")
        output_path (str): Destination PDF filename

    Returns:
        str: Path to generated PDF
    """

    # Generate case metadata
    case_id = f"LCCT_{datetime.now().strftime('%Y%m%d')}_{uuid.uuid4().hex[:8].upper()}"
    analysis_datetime = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # Build PDF
    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()

    # Header
    pdf.set_font("Arial", "B", 16)
    pdf.set_text_color(19, 71, 52)
    pdf.cell(0, 10, "Lung CT AI Detection Report", ln=True, align='C')
    pdf.ln(8)

    # 1. Case Identification
    pdf.set_font("Arial", "B", 13)
    pdf.cell(0, 8, "1. CASE IDENTIFICATION", ln=True)
    pdf.ln(3)
    pdf.set_font("Arial", "", 11)
    pdf.set_text_color(0, 0, 0)
    pdf.cell(0, 7, f"Case ID: {case_id}", ln=True)
    pdf.cell(0, 7, f"Analysis Date & Time: {analysis_datetime}", ln=True)
    pdf.cell(0, 7, f"Patient/User: {user}", ln=True)
    pdf.cell(0, 7, "Organ System: Lung (CT scan)", ln=True)
    pdf.ln(8)

    # 2. AI Findings Summary
    pdf.set_font("Arial", "B", 13)
    pdf.cell(0, 8, "2. AI FINDINGS SUMMARY", ln=True)
    pdf.ln(3)
    pdf.set_font("Arial", "", 11)
    pdf.multi_cell(0, 6, summary)
    pdf.ln(6)

    # 3. Detection Details
    pdf.set_font("Arial", "B", 13)
    pdf.cell(0, 8, "3. DETECTION DETAILS", ln=True)
    pdf.ln(3)
    pdf.set_font("Arial", "", 11)

    if detections and len(detections) > 0:
        for d in detections:
            pdf.multi_cell(
                0, 6,
                f"- Nodule {d['nodule_id']} | Confidence: {d['confidence']} | "
                f"Location: {d['location']} | Size: {d['size']} | Priority: {d['priority']}"
            )
            pdf.ln(1)
    else:
        pdf.cell(0, 7, "No nodules detected above the set threshold.", ln=True)
    pdf.ln(8)

    # 4. Purpose of Analysis
    if purpose:
        pdf.set_font("Arial", "B", 13)
        pdf.cell(0, 8, "4. PURPOSE OF ANALYSIS", ln=True)
        pdf.ln(3)
        pdf.set_font("Arial", "", 11)
        pdf.multi_cell(0, 6, purpose)
        pdf.ln(6)

    # 5. Observations
    if observations:
        pdf.set_font("Arial", "B", 13)
        pdf.cell(0, 8, "5. OBSERVATIONS", ln=True)
        pdf.ln(3)
        pdf.set_font("Arial", "", 11)
        pdf.multi_cell(0, 6, observations)
        pdf.ln(6)

    # 6. Important Notes
    if info_note:
        pdf.set_font("Arial", "B", 13)
        pdf.cell(0, 8, "6. IMPORTANT NOTES", ln=True)
        pdf.ln(3)
        pdf.set_font("Arial", "", 11)
        pdf.multi_cell(0, 6, info_note)
        pdf.ln(6)

    # Disclaimer
    pdf.set_font("Arial", "B", 12)
    pdf.set_text_color(150, 0, 0)
    pdf.cell(0, 8, "DISCLAIMER", ln=True)
    pdf.ln(2)
    pdf.set_font("Arial", "", 10)
    pdf.set_text_color(80, 80, 80)
    disclaimer = (
        "This AI-generated report is intended for research and educational purposes only. "
        "It does not substitute professional medical diagnosis or treatment. "
        "All findings should be reviewed by a qualified medical professional."
    )
    pdf.multi_cell(0, 6, disclaimer)

    # Footer
    pdf.ln(8)
    pdf.set_font("Arial", "I", 9)
    pdf.set_text_color(100, 100, 100)
    pdf.cell(0, 8, f"Generated by Lung CT AI System | {analysis_datetime}", ln=True, align='C')

    pdf.output(output_path)
    return output_path

